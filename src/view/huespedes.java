/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.HuespedesDAO;
import dto.HuespedesDTO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Huespedes;

/**
 *
 * @author Edwin
 */
public class huespedes extends javax.swing.JDialog {
 private javax.swing.JTable tablaHuespedes;
    /**
     * Creates new form huespedes
     */
    private DefaultTableModel modeloTabla;
    private HuespedesDAO huespedesDAO = new HuespedesDAO();
    private JFMenu parent;
    private HuespedesDAO dao = new HuespedesDAO();

  //  public huespedes() {
   //     initComponents();
   //     
   // }
    
    
    public huespedes(JFMenu parent, boolean modal) {  
          super(parent, modal);   
        initComponents();
       setLocationRelativeTo(null);
        this.parent = parent;
       //modeloTabla = (DefaultTableModel) tablaHuespedes.getModel();
        modeloTabla = (DefaultTableModel) jTable1.getModel();

        cargarDatos();
    }
    
    public void refrescarDatos(){
        cargarDatos();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pantalla de Huespedes");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Email", "Telefono", "Activo"
            }
        ));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowGrid(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Insertar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         int fila = jTable1.getSelectedRow();
    
        if (fila != -1) {
            int idHuesped = Integer.parseInt(jTable1.getValueAt(fila, 0).toString()); 
            String NombreHuesped = jTable1.getValueAt(fila, 1).toString(); 
            String EmailHuesped = jTable1.getValueAt(fila, 2).toString(); 
            String TelefonoHuesped = jTable1.getValueAt(fila, 3).toString(); 
            int intActivo = Integer.parseInt(jTable1.getValueAt(fila, 4).toString());

            // Asignar los valores al DTO
            HuespedesDTO oHuespedesDTO = new HuespedesDTO(); 
            oHuespedesDTO.setId_huesped(idHuesped); 
            oHuespedesDTO.setNombre(NombreHuesped);
            oHuespedesDTO.setEmail(EmailHuesped);
            oHuespedesDTO.setTelefono(TelefonoHuesped);
            oHuespedesDTO.setActivo(intActivo); 

            // Crear la ventana de operaciones de huesped y mostrarla
            OpHuespedes oOPHuespedes = new OpHuespedes(this, true, "UPD", oHuespedesDTO);
            oOPHuespedes.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Crear la ventana de operaciones de huesped para insertar un nuevo huesped
        HuespedesDTO oHuespedesDTO = new HuespedesDTO();  // Inicializar aquí antes de usarlo
        OpHuespedes oOpHuespedes = new OpHuespedes(this, true, "INS", oHuespedesDTO);
        oOpHuespedes.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here: Eliminar
            int fila = jTable1.getSelectedRow();
    
    if (fila != -1) {
        int idHuesped = Integer.parseInt(jTable1.getValueAt(fila, 0).toString()); 
        String nombreHuesped = jTable1.getValueAt(fila, 1).toString(); 
        String emailHuesped = jTable1.getValueAt(fila, 2).toString(); 
        String telefonoHuesped = jTable1.getValueAt(fila, 3).toString(); 
        int activo = Integer.parseInt(jTable1.getValueAt(fila, 4).toString());

        // Crear un objeto HuespedesDTO solo con el id
        HuespedesDTO oHuespedesDTO = new HuespedesDTO(); 
        oHuespedesDTO.setId_huesped(idHuesped); 
        oHuespedesDTO.setNombre(nombreHuesped);
        oHuespedesDTO.setEmail(emailHuesped);
        oHuespedesDTO.setTelefono(telefonoHuesped);
        oHuespedesDTO.setActivo(activo); 

        // Crear un JDialog para confirmar si el usuario desea eliminar
        int confirm = JOptionPane.showConfirmDialog(this, 
            "¿Está seguro que desea eliminar al huésped: " + nombreHuesped + "?", 
            "Confirmación de eliminación", 
            JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            // Realizar la eliminación del registro si el usuario confirma
            boolean operacion = dao.delete(oHuespedesDTO.getId_huesped());
            if (operacion) {
                // Actualizar los datos en la vista
                cargarDatos();
                JOptionPane.showMessageDialog(this, "Registro eliminado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Hubo un error al eliminar el registro", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Debe seleccionar una fila", "ERROR", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(huespedes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(huespedes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(huespedes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(huespedes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
               // new huespedes().setVisible(true);
                
            }
        });
    }

    
        private void cargarDatos(){
        modeloTabla.setRowCount(0);
        List<Object> huespedes = huespedesDAO.getAll();
        for(Object huesped_uncast : huespedes){
            Huespedes huesped = (Huespedes) huesped_uncast;
            modeloTabla.addRow(new Object[]{huesped.getId_huesped(), huesped.getNombre(), huesped.getEmail(), huesped.getTelefono(),huesped.getActivo()});
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
