/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ReservasDAO;
import dto.ReservasDTO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Reservas;
import com.toedter.calendar.JDateChooser;


/**
 *
 * @author Edwin
 */
public class reservas extends javax.swing.JDialog {
        /**
     * Creates new form reservas
     */
    private DefaultTableModel modeloTabla;
    private ReservasDAO reservasDAO = new ReservasDAO();
    private JFMenu parent;
    
    public reservas(JFMenu parent, boolean modal) {
         super(parent, modal); 

        initComponents();
        setLocationRelativeTo(null);
        this.parent = parent;
        modeloTabla = (DefaultTableModel) jTable1.getModel();
        cargarDatos();
    }
    public void refrescarDatos(){
        cargarDatos();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pantalla de Reservas");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id_Reserva", "Id Huesped", "Id Habitacion", "Fecha Inicio", "Fecha Final", "Activo"
            }
        ));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Insertar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Crear un nuevo objeto ReservasDTO para la inserción
        ReservasDTO oReservasDTO = new ReservasDTO();
        // Crear la ventana para la operación de insertar (INS)
        OpReservas oOpReservas = new OpReservas(this, true, "INS", oReservasDTO);
        oOpReservas.setVisible(true);  // Mostrar la ventana de operación
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int fila = jTable1.getSelectedRow();
        if (fila != -1) {
            int idReserva = Integer.parseInt(jTable1.getValueAt(fila, 0).toString());
            int idHuesped = Integer.parseInt(jTable1.getValueAt(fila, 1).toString());
            int idHabitacion = Integer.parseInt(jTable1.getValueAt(fila, 2).toString());

            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            Date fechaInicio = null;
            Date fechaFin = null;
            try {
                fechaInicio = formato.parse(jTable1.getValueAt(fila, 3).toString());
                fechaFin = formato.parse(jTable1.getValueAt(fila, 4).toString());
            } catch (ParseException e) {
                e.printStackTrace();  // Maneja el error si la fecha no es válida
            }

            int intActivo = Integer.parseInt(jTable1.getValueAt(fila, 5).toString());

            // Asignar los valores al DTO
            ReservasDTO oReservasDTO = new ReservasDTO();
            oReservasDTO.setId_reserva(idReserva);
            oReservasDTO.setId_huesped(idHuesped);
            oReservasDTO.setId_habitacion(idHabitacion);
            oReservasDTO.setFecha_inicio(new java.sql.Date(fechaInicio.getTime()));  // Convertir a java.sql.Date
            oReservasDTO.setFecha_fin(new java.sql.Date(fechaFin.getTime()));
            oReservasDTO.setActivo(intActivo);

            // Crear la ventana de operación para editar (UPD)
            OpReservas oOpReservas = new OpReservas(this, true, "UPD", oReservasDTO);
            oOpReservas.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        cargarDatos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int fila = jTable1.getSelectedRow();
        if (fila != -1) {
            int idReserva = Integer.parseInt(jTable1.getValueAt(fila, 0).toString());
            int opcion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de eliminar esta reserva?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
            if (opcion == JOptionPane.YES_OPTION) {
                boolean eliminado = reservasDAO.delete(idReserva);
                if (eliminado) {
                    JOptionPane.showMessageDialog(this, "Reserva eliminada exitosamente.");
                    cargarDatos();  // Actualizar la tabla después de la eliminación
                } else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar la reserva.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //  new reservas().setVisible(true);
            }
        });
    }
    
    private void cargarDatos(){
    modeloTabla.setRowCount(0);
    
    // Obtener la lista de objetos desde el DAO
    List<Object> listaObjetos = reservasDAO.getAll();  // Aquí obtenemos List<Object>
    
    // Crear una lista de ReservasDTO
    List<ReservasDTO> reservas = new ArrayList<>();
    
    // Hacer el cast de cada objeto a ReservasDTO
    for (Object obj : listaObjetos) {
        if (obj instanceof ReservasDTO) {
            reservas.add((ReservasDTO) obj);  // Realizamos el cast
        }
    }

    // Ahora trabajamos con la lista de ReservasDTO
    for (ReservasDTO reserva : reservas) {
        modeloTabla.addRow(new Object[]{
            reserva.getId_reserva(),
            reserva.getId_huesped(),
            reserva.getId_habitacion(),
            reserva.getFecha_inicio(),
            reserva.getFecha_fin(),
            reserva.getActivo()
        });
    } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
