/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package view;

import controller.UsuariosDAO;
import dto.UsuariosDTO;
import javax.swing.JOptionPane;
import utils.PasswordUtils;

/**
 *
 * @author Edwin
 */

public class OpUsuarios extends javax.swing.JDialog {
    private String Mode = "";
    static private int id = 0;
    private usuarios parent;
    private UsuariosDTO dto;
    private UsuariosDAO dao; // Declare the dao variable

    /** Creates new form OpUsuarios */
    public OpUsuarios(usuarios parent, boolean modal, String mode, UsuariosDTO dto) {
        super(parent, modal); 
        initComponents();
        this.Mode = mode; // Use the constructor parameter "mode"
        this.id = id;
        this.dto =  dto;
        this.dao = new UsuariosDAO();
        setLocationRelativeTo(null);
        this.parent = parent;  
        
            if("UPD".equals(mode)) {
        // Llenar los campos con los datos del DTO
        jTextField1.setText(String.valueOf(dto.getId()));
        jTextField2.setText(dto.getUsuario());
        jTextField3.setText(dto.getNombre());
        jTextField4.setText(dto.getEmail());
        
        // Para la contraseña, puedes usar un placeholder
        jTextField5.setText(""); // O mostrar "********"
        jTextField5.putClientProperty("originalHash", dto.getContrasena());
        
        jTextField6.setText(String.valueOf(dto.getId_Rol()));
        jTextField7.setText(String.valueOf(dto.getActivo()));
    }
    }          

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextField1.setText("0");

        jTextField2.setText("jTextField2");

        jTextField3.setText("jTextField3");

        jTextField4.setText("jTextField4");

        jTextField6.setText("jTextField6");

        jTextField7.setText("jTextField7");

        jLabel1.setText("id");

        jLabel2.setText("Usuario");

        jLabel3.setText("Nombre");

        jLabel4.setText("Email");

        jLabel5.setText("Contraseña");

        jLabel6.setText("Rol");

        jLabel7.setText("Activo");

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");

        jTextField5.setText("jTextField5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4)
                            .addComponent(jTextField6)
                            .addComponent(jTextField7)
                            .addComponent(jTextField5)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    if (Mode.equals("INS")) {
        System.out.println("Entró a INS");

        // Validación de todos los campos
        boolean validacion = validarCamposUsuario();
        if (validacion) {
            UsuariosDTO usuarioDTO = new UsuariosDTO();
            usuarioDTO.setId(Integer.parseInt(jTextField1.getText()));
            usuarioDTO.setUsuario(jTextField2.getText());
            usuarioDTO.setNombre(jTextField3.getText());
            usuarioDTO.setEmail(jTextField4.getText());
            
            // Encriptar la contraseña
            String contrasenaPlana = jTextField5.getText();
            String salt = PasswordUtils.generateSalt();
            String contrasenaEncriptada = PasswordUtils.hashPassword(contrasenaPlana, salt);
            usuarioDTO.setContrasena(contrasenaEncriptada);
            usuarioDTO.setSalt(salt);
            
            try {
                usuarioDTO.setId_Rol(Integer.parseInt(jTextField6.getText())); // Corregido a setId_Rol()
                int valorActivo = Integer.parseInt(jTextField7.getText());
                if(valorActivo != 0 && valorActivo != 1) {
                    throw new IllegalArgumentException("Activo debe ser 0 o 1");
                }
                usuarioDTO.setActivo(valorActivo);
                
                UsuariosDAO usuariosDAO = new UsuariosDAO(); 
                boolean operacion = usuariosDAO.insertar(usuarioDTO);
                
                if (operacion) {
                    JOptionPane.showMessageDialog(this, "Usuario insertado exitosamente.", 
                        "ÉXITO", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al insertar el usuario.", 
                        "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Los campos 'Rol' y 'Activo' deben ser números válidos.", 
                    "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), 
                    "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else if (Mode.equals("UPD")) {
        System.out.println("Entró a UPD");

        // Validación de todos los campos
        boolean validacion = validarCamposUsuario();
        if (validacion) {
            UsuariosDTO usuarioDTO = new UsuariosDTO();
            usuarioDTO.setId(Integer.parseInt(jTextField1.getText()));
            usuarioDTO.setUsuario(jTextField2.getText());
            usuarioDTO.setNombre(jTextField3.getText());
            usuarioDTO.setEmail(jTextField4.getText());
            
            // Manejo especial de la contraseña
            String nuevaContrasena = jTextField5.getText();
            if(!nuevaContrasena.isEmpty()) {
                String salt = PasswordUtils.generateSalt();
                String contrasenaEncriptada = PasswordUtils.hashPassword(nuevaContrasena, salt);
                usuarioDTO.setContrasena(contrasenaEncriptada);
                usuarioDTO.setSalt(salt);
            } else {
                // Mantener la contraseña actual si no se proporciona una nueva
                String originalHash = (String) jTextField5.getClientProperty("originalHash");
                usuarioDTO.setContrasena(originalHash);
            }
            
            try {
                usuarioDTO.setId_Rol(Integer.parseInt(jTextField6.getText()));
                int valorActivo = Integer.parseInt(jTextField7.getText());
                if(valorActivo != 0 && valorActivo != 1) {
                    throw new IllegalArgumentException("Activo debe ser 0 o 1");
                }
                usuarioDTO.setActivo(valorActivo);
                
                UsuariosDAO usuariosDAO = new UsuariosDAO();
                boolean operacion = usuariosDAO.actualizar(usuarioDTO);
                
                if (operacion) {
                    JOptionPane.showMessageDialog(this, "Usuario actualizado exitosamente.", 
                        "ÉXITO", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al actualizar el usuario.", 
                        "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Los campos 'Rol' y 'Activo' deben ser números válidos.", 
                    "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), 
                    "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed
private boolean validarCamposUsuario() {
    if (jTextField1.getText().trim().isEmpty() ||
        jTextField2.getText().trim().isEmpty() ||
        jTextField3.getText().trim().isEmpty() ||
        (Mode.equals("INS") && jTextField4.getText().length() == 0)) {
        
        JOptionPane.showMessageDialog(this, 
            "Todos los campos obligatorios deben estar completos.", 
            "ERROR DE VALIDACIÓN", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    return true;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //  new OpUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables

}
