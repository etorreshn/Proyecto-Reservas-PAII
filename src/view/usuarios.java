/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.UsuariosDAO;
import dto.UsuariosDTO;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Usuarios;

/**
 *
 * @author Edwin
 */
public class usuarios extends javax.swing.JDialog {

    /**
     * Creates new form Usuarios
     */
    
    private DefaultTableModel modeloTabla;
    private UsuariosDAO usuariosDAO = new UsuariosDAO();
    private JFMenu parent;
    
    public usuarios(JFMenu parent, boolean modal) throws SQLException {
        super(parent, modal); 
        initComponents();
        setLocationRelativeTo(null);
        this.parent = parent;
        modeloTabla = (DefaultTableModel) jTable1.getModel();
        cargarDatos();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Usuarios");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Usuario", "Nombre", "Email", "Contraseña", "Rol", "Activo"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                UsuariosDTO oUsuariosDTO = new UsuariosDTO();
        // Crear la ventana para la operación de insertar (INS)
        OpUsuarios oOpUsuarios = new OpUsuarios(this, true, "INS", oUsuariosDTO);
        oOpUsuarios.setVisible(true);  // Mostrar la ventana de operación
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    int fila = jTable1.getSelectedRow();
    
    if (fila != -1) {
        try {
            // Obtener valores de la tabla - ASEGURAR LOS ÍNDICES CORRECTOS
             //modeloTabla = jTable1.getModel();
            
            int idUsuario = Integer.parseInt(modeloTabla.getValueAt(fila, 0).toString());
            String usuario = modeloTabla.getValueAt(fila, 1).toString();
            String nombre = modeloTabla.getValueAt(fila, 2).toString();
            String email = modeloTabla.getValueAt(fila, 3).toString();
            
            // La contraseña debe manejarse como String - NO PARSEAR A NÚMERO
            String contrasenaHash = modeloTabla.getValueAt(fila, 4).toString();
            
            // Campos numéricos
            int idRol = Integer.parseInt(modeloTabla.getValueAt(fila, 5).toString());
            int activo = Integer.parseInt(modeloTabla.getValueAt(fila, 6).toString());

            // Validar campo activo
            if(activo != 0 && activo != 1) {
                JOptionPane.showMessageDialog(this, 
                    "El valor de 'activo' debe ser 0 o 1", 
                    "Error en datos", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Crear y configurar el DTO
            UsuariosDTO usuarioDTO = new UsuariosDTO(); 
            usuarioDTO.setId(idUsuario); 
            usuarioDTO.setUsuario(usuario);
            usuarioDTO.setNombre(nombre);
            usuarioDTO.setEmail(email);
            usuarioDTO.setContrasena(contrasenaHash); // Asignar el hash directamente
            usuarioDTO.setId_Rol(idRol);
            usuarioDTO.setActivo(activo); 

            // Crear y mostrar ventana de edición
            OpUsuarios oOpUsuarios = new OpUsuarios(this, true, "UPD", usuarioDTO);
            oOpUsuarios.setVisible(true);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Error en los datos numéricos (ID, Rol o Activo). Verifique los tipos de datos.", 
                "Error de formato", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, 
            "Debe seleccionar un usuario para editar", 
            "ERROR", 
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             //   new usuarios().setVisible(true);
            }
        });
    }
    private void cargarDatos() throws SQLException {
        modeloTabla.setRowCount(0);
    
        // Obtener la lista de objetos desde el DAO
        List<Object> usuarios = usuariosDAO.getAll();
        
    for(Object usuarioObj : usuarios) {
        if(usuarioObj instanceof UsuariosDTO) {
            UsuariosDTO usuarioDTO = (UsuariosDTO) usuarioObj;
            modeloTabla.addRow(new Object[]{
                usuarioDTO.getId(), 
                usuarioDTO.getUsuario(), 
                usuarioDTO.getNombre(),    
                usuarioDTO.getEmail(),
                usuarioDTO.getContrasena(), // Asegúrate que el nombre del método coincide
                usuarioDTO.getId_Rol() ,     // con tu clase UsuariosDTO
                usuarioDTO.getActivo()
            });
        } else if(usuarioObj instanceof Usuarios) {
            Usuarios usuario = (Usuarios) usuarioObj;
            modeloTabla.addRow(new Object[]{
                usuario.getId(), 
                usuario.getUsuario(),
                usuario.getNombre(), 
                usuario.getEmail(),     // Asumiendo que Usuarios tiene estos campos
                usuario.getContrasena(),
                usuario.getRol(),
                usuario.getActivo()
            });
        }
    }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
